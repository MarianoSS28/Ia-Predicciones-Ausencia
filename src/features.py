#features.py

import pandas as pd

def build_features(df: pd.DataFrame) -> pd.DataFrame:
    # Asegurar que 'fecha' sea datetime
    df['fecha'] = pd.to_datetime(df['fecha'], errors='coerce', dayfirst=True)

    # Crear features temporales
    df['mes'] = df['fecha'].dt.month
    df['anio'] = df['fecha'].dt.year
    df['dia_mes'] = df['fecha'].dt.day
    df['semana_anio'] = df['fecha'].dt.isocalendar().week
    
    # Features de d√≠as
    df['es_viernes'] = (df['dia_semana'] == 4).astype(int)
    df['es_lunes'] = (df['dia_semana'] == 0).astype(int)
    df['es_fin_semana'] = (df['dia_semana'] >= 5).astype(int)
    
    # Features de tardanzas
    df['tarde'] = (df['tardanza_min'] > 15).astype(int)
    df['muy_tarde'] = (df['tardanza_min'] > 30).astype(int)
    
    # ‚úÖ ELIMINAR TODAS LAS COLUMNAS NO NUM√âRICAS
    columnas_a_eliminar = [
        'fecha',
        'hora_entrada_teorica',
        'hora_entrada_real',
        'hora_salida_teorica',
        'hora_salida_real',
        'nombre_empleado'  # ‚Üê Por si acaso qued√≥
    ]
    
    df = df.drop(columns=columnas_a_eliminar, errors='ignore')
    
    # ‚úÖ VERIFICAR QUE SOLO QUEDEN COLUMNAS NUM√âRICAS
    print("\nüîç Columnas finales en el dataset:")
    print(df.columns.tolist())
    print(f"\nüìä Tipos de datos:")
    print(df.dtypes)
    
    # ‚úÖ CONVERTIR TODO A NUM√âRICO
    for col in df.columns:
        if df[col].dtype == 'object':
            print(f"‚ö†Ô∏è  ADVERTENCIA: La columna '{col}' es de tipo texto, intentando convertir...")
            df[col] = pd.to_numeric(df[col], errors='coerce')
    
    # Rellenar NaN con 0
    df = df.fillna(0)
    
    return df

if __name__ == "__main__":
    df = pd.read_csv("data/processed/empleados_clean.csv")
    df = build_features(df)
    
    # ‚úÖ VALIDACI√ìN FINAL
    print("\n‚úÖ Validaci√≥n final:")
    print(f"   - Total de columnas: {len(df.columns)}")
    print(f"   - Total de filas: {len(df)}")
    print(f"   - Columnas no num√©ricas: {df.select_dtypes(include=['object']).columns.tolist()}")
    
    if len(df.select_dtypes(include=['object']).columns) > 0:
        print("\n‚ùå ERROR: Todav√≠a hay columnas de texto!")
        print(df.select_dtypes(include=['object']).head())
    else:
        print("\n‚úÖ PERFECTO: Solo columnas num√©ricas")
    
    df.to_csv("data/processed/empleados_features.csv", index=False)
    print("\n‚úÖ Archivo generado: data/processed/empleados_features.csv")